# Spawning new terminal instances in the current working directory
function osc7-pwd() {
    emulate -L zsh # also sets localoptions for us
    setopt extendedglob
    local LC_ALL=C
    printf '\e]7;file://%s%s\e\' $HOST ${PWD//(#m)([^@-Za-z&-;_~])/%${(l:2::0:)$(([##16]#MATCH))}}
}
function chpwd-osc7-pwd() {
    (( ZSH_SUBSHELL )) || osc7-pwd
}
add-zsh-hook -Uz chpwd chpwd-osc7-pwd


# Jumping between prompts
function _foot_prompt_jump_precmd() {
    print -Pn "\e]133;A\e\\"
}

add-zsh-hook -Uz precmd _foot_prompt_jump_precmd


# Piping last command's output
function _foot_output_pipe_precmd {
  if ! builtin zle; then
    print -n "\e]133;D\e\\"
      fi
}
function _foot_output_pipe_preexec {
  print -n "\e]133;C\e\\"
}

add-zsh-hook -Uz precmd _foot_output_pipe_precmd
add-zsh-hook -Uz preexec _foot_output_pipe_preexec

# https://codeberg.org/dnkl/foot/wiki#how-do-i-make-ctrl-l-scroll-the-content-instead-of-erasing-it
function zle-scroll-top() {
    local esc
    local -i ROW COL OFFSET
    IFS='[;' read -sdR $'esc?\e[6n' ROW COL <$TTY
    OFFSET="${#${(@Af)PREBUFFER%$'\n'}}"+"${#${(@Af)LBUFFER:-1}}"
    (( ROW-OFFSET )) && printf '\e[%1$dS\e[%1$dA' ROW-OFFSET
    zle redisplay
}
zle -N clear-screen zle-scroll-top
